@model EmployerVM
<div class="container-fluid pt-4 px-0">
    <div class="row g-4">
        <div class="col-lg-12">
            <div class="bg-light rounded h-100 p-4">
                <h3 class="mb-4 fw-bold text-primary">@(Model.Employer.Id!=0?"Update":"Create") Employer</h3>
                <form method="post" enctype="multipart/form-data">
                    <input asp-for="@Model.Employer.Id" type="hidden">
                    <div class="form-floating mb-3">
                        <input asp-for="@Model.Employer.Username" type="text" class="form-control" id="floatingInput" placeholder="">
                        <label asp-for="@Model.Employer.Username" for="floatingInput"></label>
                        <div style="position: relative;">
                            <span asp-validation-for="@Model.Employer.Username" class="text-danger m-2"></span>
                            <span id="username-error" class="text-danger m-2" style="position: absolute; top: 0; left: 0;"></span>
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        <input asp-for="@Model.Employer.Password" type="text" class="form-control" id="floatingInput" placeholder="">
                        <label asp-for="@Model.Employer.Password" for="floatingInput"></label>
                        <span asp-validation-for="@Model.Employer.Password" class="text-danger m-2"></span>
                    </div>

                    <div class="form-floating mb-3">
                        <input asp-for="@Model.Employer.Email" type="text" class="form-control" id="floatingEmail" placeholder="">
                        <label asp-for="@Model.Employer.Email" for="floatingInput"></label>
                        <div style="position: relative;">
                            <span asp-validation-for="@Model.Employer.Email" class="text-danger m-2"></span>
                            <span id="email-error" class="text-danger m-2" style="position: absolute; top: 0; left: 0;"></span>
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        <input asp-for="@Model.Employer.Fullname" type="text" class="form-control" id="floatingInput" placeholder="">
                        <label asp-for="@Model.Employer.Fullname" for="floatingInput"></label>
                        <span asp-validation-for="@Model.Employer.Fullname" class="text-danger m-2"></span>
                    </div>

                    <div class="form-floating mb-3">
                        <select asp-for="@Model.Employer.CompanyId" asp-items="@Model.CompanyList" class="form-control">
                            <option disabled selected>--Select Company--</option>
                        </select>
                        <label asp-for="@Model.Employer.CompanyId"></label>
                        <span asp-validation-for="@Model.Employer.CompanyId" class="text-danger m-2"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="@Model.Employer.Location" type="text" class="form-control" id="floatingInput" placeholder="">
                        <label asp-for="@Model.Employer.Location" for="floatingInput"></label>
                        <span asp-validation-for="@Model.Employer.Location" class="text-danger m-2"></span>
                    </div>
                    @if (Model.Employer.Id != 0)
                    {
                        <div>
                            <input asp-for="@Model.Employer.Create" type="hidden" class="form-control" id="floatingInputCreate"
                                   value="@Model.Employer.Create" placeholder="">
                            <input asp-for="@Model.Employer.Update" type="hidden" class="form-control" id="floatingInputCreate"
                                   value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss")" placeholder="">
                            
                        </div>
                    }
                    else
                    {
                        <div>
                        <input asp-for="@Model.Employer.Create" type="hidden" class="form-control" id="floatingInputCreate"
                                   value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss")" placeholder="">
                        <input asp-for="@Model.Employer.Update" type="hidden" class="form-control" id="floatingInputCreate"
                               value="" placeholder="">
                        
                    </div>
                    }
                    

                    
                    <div>
                        <input asp-for="@Model.Employer.Status" type="hidden" value="true" />
                    </div>
                    @if (Model.Employer.Id != 0)
                    {
                        <button type="submit" class="btn btn-primary">Update</button>
                    }
                    else
                        {
                            <button type="submit" class="btn btn-primary">Create</button>
                        }
                    <a asp-area="Admin" asp-controller="Employer" asp-action="Index" class="btn btn-danger">Back To List</a>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            var usernameExists = false; // Biến để theo dõi trạng thái của username
            var emailExists = false;    // Biến để theo dõi trạng thái của email

            // Lưu giá trị ban đầu của username và email khi form được tải
            var initialUsername = $('#floatingInput').val();
            var initialEmail = $('#floatingEmail').val();

            // Hàm kiểm tra username
            function checkUsername() {
                var username = $('#floatingInput').val();
                var usernameErrorMessage = $('#username-error');

                if (username !== initialUsername && username) { // Chỉ kiểm tra nếu username thay đổi
                    $.ajax({
                        url: '/admin/employer/IsUsernameAndEmailAvailable',
                        type: 'GET',
                        data: { username: username, email: '' }, // Gửi email rỗng để chỉ kiểm tra username
                        success: function (result) {
                            if (result.isUsernameTaken) {
                                usernameErrorMessage.text('Username already exists').css('color', 'red');
                                usernameExists = true; // Cập nhật biến nếu username đã tồn tại
                            } else {
                                usernameErrorMessage.text('');
                                usernameExists = false; // Reset nếu username không tồn tại
                            }
                        },
                        error: function () {
                            usernameErrorMessage.text('Error checking login name').css('color', 'red');
                            usernameExists = true; // Trong trường hợp lỗi, ngăn submit
                        }
                    });
                }
            }

            // Hàm kiểm tra email
            function checkEmail() {
                var email = $('#floatingEmail').val();
                var emailErrorMessage = $('#email-error');

                if (email !== initialEmail && email) { // Chỉ kiểm tra nếu email thay đổi
                    $.ajax({
                        url: '/admin/employer/IsUsernameAndEmailAvailable',
                        type: 'GET',
                        data: { username: '', email: email }, // Gửi username rỗng để chỉ kiểm tra email
                        success: function (result) {
                            if (result.isEmailTaken) {
                                emailErrorMessage.text('Email already exists').css('color', 'red');
                                emailExists = true; // Cập nhật biến nếu email đã tồn tại
                            } else {
                                emailErrorMessage.text('');
                                emailExists = false; // Reset nếu email không tồn tại
                            }
                        },
                        error: function () {
                            emailErrorMessage.text('Error checking email').css('color', 'red');
                            emailExists = true; // Trong trường hợp lỗi, ngăn submit
                        }
                    });
                }
            }

            // Gọi hàm kiểm tra khi username hoặc email bị thay đổi
            $('#floatingInput').on('blur', checkUsername);
            $('#floatingEmail').on('blur', checkEmail);

            // Kiểm tra trạng thái của username và email trước khi submit form
            $('form').on('submit', function (e) {
                if (usernameExists || emailExists) {
                    e.preventDefault(); // Ngăn không cho submit form

                    if (usernameExists) {
                        $('#floatingInput').focus(); // Focus vào ô username nếu trùng
                    } else if (emailExists) {
                        $('#floatingEmail').focus(); // Focus vào ô email nếu trùng
                    }
                }
            });
        });
    </script>



    @{
        <partial name="_ValidationScriptsPartial"/>
    }
}

